#include<iostream>
#include<string>
#include<ctime>
#include<math.h>


//#define DEBUG


//define позволяет нам заменять какую либо часть на букавки, что нам удобнее, например 
#define PI 3.14 //вместо того чтобы вечно писать 3.14 мы будем писать PI и будем понимать что мы имеем число пи
#define MATH_TIMES(x, y) ((x)*(y))


using namespace std;

void main()
{
	setlocale(LC_ALL, "Rus");     

	setlocale(LC_ALL, "Rus");
	srand(time(NULL));

	cout << "препроцессор что это, что такое #define" << endl;
	//препроцессор это программа, которая проводит какие-либо изменения в вашем коде еще до его компиллирования
	//Это своего рода преждевременная обработка вашего кода, check test
	//например #include это и есть директива препроцессора
	// а теперь что такое #define, смотреть на верх
	//она говорит препроцессору следующее - если ты увидишь схожие символы которые у меня есть в коде замени их на определенный символ
	//в чем отличе тогда такой записи от обачной константы. дело в обработке данных при копиляции
	//так как define директива препроцессора, еще до компиляции так сказать подставит нужные значения! вещь конечно на любителя, но вполне рабочая
	//тема, встретить можно. однако могут быть еще и опасные штучки, так что надо быть аккуратней!
	//например вы изменили { на слово begin а } на end, но ведь тогда все такие слова будут изменться, А ЕСТЬ Ф-Я BEGIN И ЧТО ТЫ СДЕЛАЕШЬ?

	//а теперь каким образом с помощью макроса создать собственную ф-ию, которая будет иметь сови параметры, логику и результат

	//наверху найдешь define, там кстати все очень строго, вплоть до пробелов
	cout << MATH_TIMES(2, 125) << "\t" << "Функция с помощью макроса" << endl;
}
