cout << "условная компиляция" << endl;
	//условная компиляция - это удобная штука со своими директивами, она удобна для того чтобы одним движением руки комментировать большой участок
	//кода не выискивая его
	//допусти у нас есть такая фигня, ну было нам удобно подписывать, а теперь все это надо убрать, и хорошо если их всего 2, а что если больше?
	#ifdef DEBUG
	cout << "начало цикла" << endl;
	#endif
	for (int i = 0; i < 4; i++)
	{
		cout << i << endl;

	}
#ifdef DEBUG
	cout << "конец цикла" << endl;
#endif
	//тут нам помогут директивы препроцессора (во имя избежания проблем в дальнейшем коде все будет писатся закомментированно)
	//для того чтобы все сработало надо просто написать наверху define и присвоить любую переменную
	// потом обернуть нужный кусок кода в конструкцию ||    ifdef НАЗВАНИЕ_ПЕРЕМЕННОЙ <кусок кода который надо закоммить> endif     ||
	//дальше возврат к нашему define если нам надо чтобы инф-ия работала оставляем его просто так, надо чтобы исчезла, просто берем и коммим define
	//оборачиваем все в DEBUG и все в шоколаде))

	//но еще есть else

	#ifdef DEBUG
	cout << "дебаг определен" << endl;

#else
	cout << "дебаг НЕ определен" << endl;

#endif

	//я думаю ты понял как это работает
	//конечно еще есть ifndef но это тот же ifdef просто наоборот||конечно есть еще if но там все аааабсолютно понятно, тот же if просто с решетками
