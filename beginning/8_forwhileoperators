#include<iostream> 
using namespace std;

void main()
{
	setlocale(LC_ALL, "Rus");     

	cout << "Цикл while" << NEW_LINE;
	// цикл while
	// синтаксис цикла while
	/*

	while (утверждение)
	{
	действие_для_повторения;
	}

	*/
	cout << "ПРЕДУПРЕЖДЕНИЕ сейчас будет ошибка" << NEW_LINE;


	int g = 0;
	while (g < 10)
	{
		cout << "ОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКАОШИБКА" << NEW_LINE;
		g++;
	}


	cout << "Цикл do while" << NEW_LINE;

	// цикл do while
	//синтаксис цикла do while
	/*

	do
	{

	}while (true);

	*/

	do
	{
		cout << "Переменная равна = " << g << NEW_LINE;

	} while (g < 5);

	cout << "Цикл for" << NEW_LINE;

	// цикл for
	//синтаксис цикла for
	/*

	for (int i = 0 (отвечает за то какая переменная инициализируется в цикле)      ; i < length  (проверка какого либо условия)      ; i++   (итератор, то есть то что заставляет цикл завершиться)       )
	{
	 действие;
	}

	*/

	//ФИЧА1 
	// первая часть цикла не обязательная можно объявить и присвоить значение переменной до цикла!
	//НО но ; стоять все равно должна иначе все


	int i = 0;
	for (; i < 10; i++)
	{
		cout << "Перменная i равна " << i << NEW_LINE;

	}

	//ФИЧА 2
	//инкремент (или просто изменение переменной) можно выписать вниз
	//НО но ; стоять все равно должна иначе все

	for (; i < 20; )
	{
		cout << "Переменная i равна " << i << NEW_LINE;
		i++;
	}

	//ФИЧА 3
	//можно убрать проверку условия, однако тогда цикл станет вечным
	//НО но ; стоять все равно должна иначе все
	/*

				for (; ;i++ )
				{
					cout << "Цикл сработал!" << NEW_LINE;

				}
	*/
	//Вывод
	//В цикле for все части необязательны, но думаю ты Степа понял что лучше так не делать!

	//ФИЧА 4
	//в цикл for можно добавить две переменные и даже больше
	//условие можно записать в ввиде логического условия (&& || =!)
	//однако моя собственная теория заключается в том что тут 
	//	|| теперь оначает И
	//	&& теперь означает ИЛИ

	for (int j = 0; (i < 30) || (j != -15); i++, j--)
	{
		cout << "Переменная i равна " << i << NEW_LINE;
		cout << "Переменная j равна " << j << NEW_LINE;
	}
}
